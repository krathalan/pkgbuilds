#!/usr/bin/env bash
# Maintainer: Hunter Peavey < printf "dev@die.bots" | sed "s/die.bots/krathalan.net/g" >
# shellcheck disable=SC2034
# shellcheck disable=SC2154

# Updated deleted AUR pkgbuild with default Jellyfin ffmpeg configuration and
# fixed build error by disabling cuda/nvenc/nvdec

# Contributor : nyanmisaka <nst799610810@gmail.com>

pkgname=jellyfin-ffmpeg6-krathalan
pkgver=6.0.1
pkgrel=5
pkgdesc="FFmpeg6 for Jellyfin, Krathalan's pkgbuild (no cuda/nvenc/nvdec)"
url="https://github.com/jellyfin/jellyfin-ffmpeg"
arch=("x86_64")
license=("GPL3")

source=("git+${url}.git#tag=v${pkgver}-${pkgrel}")
sha256sums=("SKIP")

depends=(
  "bzip2"
  "fontconfig"
  "fribidi"
  "gmp"
  "gnutls"
  "lame"
  "libass.so"
  "libbluray.so"
  "libchromaprint.so"
  "libdav1d.so"
  "libdrm"
  "libfdk-aac"
  "libfreetype.so"
  "libopenmpt.so"
  "libplacebo.so"
  "libtheora"
  "libva.so"
  "libva-drm.so"
  "libvdpau"
  "libvorbisenc.so"
  "libvorbis.so"
  "libvpx.so"
  "libwebp"
  "libx11"
  "libx264.so"
  "libx265.so"
  "libxext"
  "libxml2"
  "libzimg.so"
  "ocl-icd"
  "onevpl"
  "opus"
  "shaderc"
  "srt"
  "vulkan-icd-loader"
  "xz"
  "zlib"
  "zvbi"
)
makedepends=(
  "git"
  "nasm"
  "clang"
  "ffnvcodec-headers"
  "amf-headers"
  "opencl-headers"
  "vulkan-headers"
)
optdepends=(
  "intel-media-driver: for Intel VAAPI support (Broadwell and newer)"
  "intel-media-sdk: for Intel Quick Sync Video"
  "onevpl-intel-gpu: for Intel Quick Sync Video (12th Gen and newer)"
  "intel-compute-runtime: for Intel OpenCL runtime based Tonemapping"
  "libva-intel-driver: for Intel legacy VAAPI support (10th Gen and older)"
  "libva-mesa-driver: for AMD VAAPI support"
  "opencl-amd: for AMD OpenCL runtime based Tonemapping"
  "vulkan-radeon: for AMD RADV Vulkan support"
  "vulkan-intel: for Intel ANV Vulkan support"
)
conflicts=(
  "jellyfin-ffmpeg"
  "jellyfin-ffmpeg5"
  "jellyfin-ffmpeg5-bin"
  "jellyfin-ffmpeg6"
)

prepare() {
  cd "${srcdir}/jellyfin-ffmpeg" || exit 1
  git reset --hard v${pkgver}-${pkgrel} && git clean -qfdx
  cat debian/patches/*.patch | patch -Nsp1 -d .
}

build() {
  cd jellyfin-ffmpeg || exit 1

  printf "%s\n" "  -> Running jellyfin-ffmpeg6 configure script..."

  # Uses configure options from https://github.com/jellyfin/jellyfin-ffmpeg/blob/jellyfin/debian/rules ; except:
  # Sets prefix to /usr/lib/jellyfin-ffmpeg so that Arch repo ffmpeg can still be installed
  # Disables cuda/nvenc/nvdec due to build issues
  ./configure \
    --prefix="/usr/lib/jellyfin-ffmpeg" \
    --arch=amd64 \
    --target-os=linux \
    --extra-version=Jellyfin \
    --disable-doc \
    --disable-ffplay \
    --disable-ptx-compression \
    --disable-static \
    --disable-libxcb \
    --disable-sdl2 \
    --disable-xlib \
    --enable-lto \
    --enable-gpl \
    --enable-version3 \
    --enable-shared \
    --enable-gmp \
    --enable-gnutls \
    --enable-chromaprint \
    --enable-opencl \
    --enable-libdrm \
    --enable-libass \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libfontconfig \
    --enable-libbluray \
    --enable-libmp3lame \
    --enable-libopus \
    --enable-libtheora \
    --enable-libvorbis \
    --enable-libopenmpt \
    --enable-libdav1d \
    --enable-libsvtav1 \
    --enable-libwebp \
    --enable-libvpx \
    --enable-libx264 \
    --enable-libx265 \
    --enable-libzvbi \
    --enable-libzimg \
    --enable-libfdk-aac \
    --enable-libshaderc \
    --enable-libplacebo \
    --enable-vulkan \
    --enable-vaapi \
    --enable-amf \
    --enable-libvpl \
    --enable-ffnvcodec \
    --enable-cuvid \
    --disable-cuda \
    --disable-cuda-llvm \
    --disable-nvdec \
    --disable-nvenc \

  make -j"$(nproc)"
}

package() {
  install -Dm 755 jellyfin-ffmpeg/ffmpeg "${pkgdir}/usr/lib/jellyfin-ffmpeg/ffmpeg"
  install -Dm 755 jellyfin-ffmpeg/ffprobe "${pkgdir}/usr/lib/jellyfin-ffmpeg/ffprobe"
}
